node -> javascript server runtime 

npm -> Node package manager -> Collection of all nodejs related Libraries 

ng -> angular/javascript library installed as a command 

We are following Angular hero tutorial over here 
https://angular.io/tutorial 

https://github.com/siddhirajpantoji/Shivani 
Each one is added in branches as completed 
Master will have complete code and Chapter wise branches have code that is working code of the chapter 
https://github.com/siddhirajpantoji/Shivani/tree/chapter1
https://github.com/siddhirajpantoji/Shivani/tree/chapter2




=============================================Interfaces==================

interface Shape {
	areaCalculate():number
}
	

Class Square implements Shape {
    number length;
    Square(len){
        this.length = len 
    }
    

    function areaCalculate(){
        return this.length * this.length
    }
}


Class Rectangle implements Shape {

    number length;
    number breadth;

    function areaCalculate(){
        return this.length * this.breadth
    }
}


Shape s = new Square(5)
Shape r = new Rectangle(4,5)

console.log(r.areaCalculate()) -> 25 
console.log(s.areaCalculate()) -> 20
===================================================

Lifecycle Hooks : 
https://angular.io/guide/lifecycle-hooks 

========================


Constructor -> Initialisation of Object properties Refer Hero Component 

This -> reference to all properties and methods of current object 

Square s = new Square(4)


== Construtcor Flow Completed .=== 

== Data Interpolation == 
https://angular.io/guide/pipes 

    <li *ngFor="let hero of heroes">
        <span class="badge">{{hero.id}}</span> {{hero.name}}
    </li

Corresponds to 

for (let i = 0 ; i <heros.length ; i++){
    var hero = heros[i]
}



Class Binding works over here 
https://angular.io/guide/attribute-binding#class-binding 

[class.selected]="hero === selectedHero" 


Corresoponds to 

selectedHero
for (let i = 0 ; i <heros.length ; i++){
    var hero = heros[i]
    if( hero === selectedHero){
        Add CSS Selected  Class to this button
    }
}

1. Calculator -> two way binding -> Chapter 1 ( )
2. Shopping list -> Two way binding with textbox and play with list -> chapter2
3. Reciepe Book -> Two parts 
    1. Editing -> Chapter 3 
    2. Service and provide Data 

Broad classification 
Level 1 - > Presentataion
Level 2 -> Service layer 
Level 3 -> Data Access Layer -> DAO layer 


data layer  
    function select(){
Select data from table 
    }
    
Service layer: 
    getData(){
      //Resultset list =   dao.select()
      return mockData ; 
      // Convert this into array 
      //and return 

    }

Presentataion layer : REST API 
    
   list data =  Service.getData()

   ngfor()

GraphQl Layer : 
    data = Service.getData()


Read about Dependency Injection 
https://angular.io/guide/dependency-injection 


class Presentation {

    constructor(service){
        this.service = service
    }

    execution(){
        this.data = this.service.getData()
    }
}

class Service{

}
service1 = new Service()
Presentation1  = new Presentataion(service1)

https://en.wikipedia.org/wiki/Dependency_injection ng generate service hero

abc :String = "xyz"; 
Corresoponds to 
abc = new String("xyz")


https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-7.html


heroes => {this.heros = heroes}

Corresoponds to 

function setHeros(heros){
    this.heros = heros
}